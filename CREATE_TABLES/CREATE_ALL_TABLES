USE master;

CREATE DATABASE Group2DoomsDay;
GO

USE Group2DoomsDay;
GO

CREATE TABLE Weapons(
WeaponID VARCHAR(8) CHECK(WeaponID LIKE 'W%') NOT NULL UNIQUE,
WeaponName CHAR(50) NOT NULL,
PowerLevel INT NOT NULL,
Range INT NOT NULL,
CONSTRAINT PK_WeaponS PRIMARY KEY (WeaponID)
);

CREATE TABLE PublicTransportation(
PublicTransportationID VARCHAR(8) CHECK(PublicTransportationID LIKE 'PT%') NOT NULL UNIQUE,
PublicTransportationType CHAR(50) NOT NULL,
CONSTRAINT PK_PublicTransportation PRIMARY KEY (PublicTransportationID)
);

CREATE TABLE Skills(
SkillID VARCHAR(8) CHECK(SkillID LIKE 'K%') NOT NULL UNIQUE,
Skill CHAR(30) NOT NULL,
CONSTRAINT PK_Skills PRIMARY KEY (SkillID)
);

CREATE TABLE Currency(
CurrencyID VARCHAR(8) CHECK(CurrencyID LIKE 'C%') NOT NULL UNIQUE,
CurrencyType CHAR(30) NOT NULL,
CONSTRAINT PK_Currency PRIMARY KEY (CurrencyID)
);

CREATE TABLE Regions(
RegionID VARCHAR(8) CHECK(RegionID LIKE 'R%') NOT NULL UNIQUE,
RegionName CHAR(50) NOT NULL UNIQUE,
Climate CHAR(50) NOT NULL,
Capital CHAR(30) CHECK(Capital LIKE 'S%') NOT NULL UNIQUE,
CONSTRAINT PK_Regions PRIMARY KEY (RegionID),
CONSTRAINT FK_Regions FOREIGN KEY(Capital) REFERENCES Settlements(SettlementID)
);

Create TABLE Landmarks(
LandmarkID VARCHAR(8) CHECK(LandmarkID LIKE 'L%') NOT NULL UNIQUE,
LandmarkType VARCHAR(100) NOT NULL,
CONSTRAINT PK_Landmarks PRIMARY KEY (LandmarkID)
);

CREATE TABLE RegionLandmarks(
SpecificLandmarkKey VARCHAR(8) CHECK(SpecificLandmarkKey LIKE 'SL%') NOT NULL UNIQUE,
LandmarkID VARCHAR(8) CHECK(LandmarkID LIKE 'L%') NOT NULL,
RegionID VARCHAR(8) CHECK(RegionID LIKE 'R%') NOT NULL,
LandmarkName VARCHAR(20) NOT NULL,
CONSTRAINT PK_RegionLandmarks PRIMARY KEY (SpecificLandmarkKey),
CONSTRAINT FK_RegionLandmarks1 FOREIGN KEY(LandmarkID) REFERENCES Landmarks(LandmarkID),
CONSTRAINT FK_RegionLandmarks2 FOREIGN KEY(RegionID) REFERENCES Regions(RegionID)
);

CREATE TABLE Food (
    FoodID VARCHAR(8) CHECK (FoodID LIKE 'F%') UNIQUE NOT NULL,
    FoodTypeID VARCHAR(8) CHECK(FoodTypeID LIKE 'FT%') NOT NULL,
    FoodName VARCHAR(100) NOT NULL,
    FoodDescription VARCHAR(200)NOT NULL,
    FoodGoodByrange INT
);

CREATE TABLE FoodType (
    FoodTypeID VARCHAR(8) NOT NULL UNIQUE,
    FoodType VARCHAR(50) NOT NULL,
    FoodType_Description CHAR(100) NOT NULL
);

/* Occupation Table */

CREATE TABLE Occupation(
OccupationID VARCHAR(8) CHECK(OccupationID LIKE 'O%') NOT NULL UNIQUE,
OccupationDescription CHAR(100) NOT NULL,
CONSTRAINT PK_Occupation PRIMARY KEY (OccupationID)
);

CREATE TABLE People(
PersonID VARCHAR(8) CHECK(PersonId LIKE '0%' NOT NULL UNIQUE,
FirstName VARCHAR(30) NOT NULL,
LastName VARCHAR(30) NOT NULL,
MiddleInitial VARCHAR(1) NULL,
Gender BIT NOT NULL,
Alive BIT DEFAULT 0 NOT NULL 
SettlementID Varchar(8) NOTNUll,
Primary Key(PersonID),
Foreign Key(SettlementID) Refrences Settlements(SettlementID)
);

/*Items Table */

CREATE TABLE Items(
ItemID VARCHAR(8) CHECK(ItemID LIKE 'I') NOT NULL UNIQUE,
ItemName CHAR(50) NOT NULL,
CONSTRAINT PK_Items PRIMARY KEY (ItemID)
);

/* item */
CREATE TABLE PersonItemInventory (
PersonID VARCHAR(8) CHECK(PersonID LIKE 'P%') UNIQUE NOT NULL,
Quantity INT NOT NULL,
ItemID VARCHAR(8) CHECK(ItemID LIKE 'I%') UNIQUE NOT NULL,
)

CREATE TABLE BusinessItemInventory (
BusinessID VARCHAR(8) CHECK(BusinessID LIKE 'B%') UNIQUE NOT NULL,
Quantity INT NOT NULL,
ItemID VARCHAR(8) CHECK(ItemID LIKE 'I%') UNIQUE NOT NULL,
)

CREATE TABLE SettlementItemInventory (
SettlementID VARCHAR(8) CHECK(SettlementID LIKE 'S%')  UNIQUE NOT NULL,
Quantity INT NOT NULL,
ItemID VARCHAR(8) CHECK(ItemID LIKE 'I%') UNIQUE NOT NULL,
)

/* currency */
CREATE TABLE PersonCurrencyInventory (
PersonID VARCHAR(8) CHECK(PersonID LIKE 'P%') UNIQUE NOT NULL, 
Quantity INT, 
CurrencyID VARCHAR(8) CHECK(CurrencyID LIKE 'C%') UNIQUE NOT NULL
)

CREATE TABLE BusinessCurrencyInventory (
BusinessID VARCHAR(8) CHECK(BusinessID LIKE 'B%') UNIQUE NOT NULL,
Quantity INT, 
CurrencyID VARCHAR(8) CHECK(CurrencyID LIKE 'C%') UNIQUE NOT NULL
)

CREATE TABLE SettlementCurrencyInventory (
SettlementID VARCHAR(8) CHECK(SettlementID LIKE 'S%')  UNIQUE NOT NULL, 
Quantity INT, 
CurrencyID VARCHAR(8) CHECK(CurrencyID LIKE 'C%') UNIQUE NOT NULL
)

/* weapon */
CREATE TABLE PersonWeaponInventory(
PersonID VARCHAR(8) CHECK(PersonID LIKE 'P%') UNIQUE NOT NULL, 
WeaponID VARCHAR(8) CHECK(WeaponID LIKE 'W%') NOT NULL,
Quantity INT NOT NULL
)

CREATE TABLE BusinessWeaponInventory(
BusinessID VARCHAR(8) CHECK(BusinessID LIKE 'B%') UNIQUE NOT NULL, 
WeaponID VARCHAR(8) CHECK(WeaponID LIKE 'W%') NOT NULL,
Quantity INT NOT NULL
)

CREATE TABLE SettlementWeaponInventory(
SettlementID VARCHAR(8) CHECK(SettlementID LIKE 'S%')  UNIQUE NOT NULL, 
WeaponID VARCHAR(8) CHECK(WeaponID LIKE 'W%') NOT NULL,
Quantity INT NOT NULL
)
/* food */
CREATE TABLE PersonFoodInventory (
PersonID VARCHAR(8) CHECK(PersonID LIKE 'P%') UNIQUE NOT NULL, 
FoodID VARCHAR(8) CHECK(FoodID LIKE 'F%') UNIQUE NOT NULL,
Quantity INT NOT NULL, 
AcquireDate DATE NOT NULL
)

CREATE TABLE BusinessFoodInventory (
BusinessID VARCHAR(8) CHECK(BusinessID LIKE 'B%') UNIQUE NOT NULL,
FoodID VARCHAR(8) CHECK(FoodID LIKE 'F%') UNIQUE NOT NULL,
Quantity INT NOT NULL, 
AcquireDate DATE NOT NULL
)

CREATE TABLE SettlementFoodInventory (
SettlementID VARCHAR(8) CHECK(SettlementID LIKE 'S%')  UNIQUE NOT NULL, 
FoodID VARCHAR(8) CHECK(FoodID LIKE 'F%') UNIQUE NOT NULL,
Quantity INT NOT NULL, 
AcquireDate DATE NOT NULL
)

/*PeopleSkills table */
CREATE TABLE PeopleSkills(
PersonID VARCHAR(8) CHECK(PersonID LIKE 'P%') NOT NULL,
SkillID VARCHAR(8) CHECK(SkillID LIKE 'K%') NOT NULL,
SkillProficiency INT NOT NULL,
CONSTRAINT PK_PeopleSkills PRIMARY KEY(PersonID,SkillId),
CONSTRAINT FK_People FOREIGN KEY (PersonID) REFERENCES People(PersonID),
CONSTRAINT FK_Skills FOREIGN KEY (SkillID) REFERENCES Skills(SkillID)
);

/*PeopleOccupation table */
CREATE TABLE PeopleOccupation(
PersonID VARCHAR(8) CHECK(PersonID LIKE 'P%') NOT NULL,
OccupationID VARCHAR(8) CHECK(OccupationID LIKE 'O%') NOT NULL,
CONSTRAINT PK_PeopleOccupation PRIMARY KEY(PersonID,OccupationID),
CONSTRAINT FK_People1 FOREIGN KEY (PersonID) REFERENCES People(PersonID),
CONSTRAINT FK_Occupation FOREIGN KEY (OccupationID) REFERENCES Skills(SkillID)
);
